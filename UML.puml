@startuml
'https://plantuml.com/sequence-diagram

class User {
 - userId : String
 - userName : String
 - passWord : String
 <<abstract>> addBook() : void
 <<abstract>> deleteBook() : void
 <<abstract>> getList()
 <<abstract>> searchBook() : void
}

class ReaderAccount extends User {
    - dateBorrowed : String
    // action and make request
    // add request in queue
    //
    getList() : ArrayList<Book>
    addBook() : void
    deleteBook() : void
    searchBook() : void
}
class Librarian extends User {

}

class HoldRequest {

}

class Notification {

    - notification : String

    // neu den date tra sach thi
    // gui cho nguoi doc thong bao qua giao dien
    reader : ReaderAccount
    reader.getList() : ArrayList
    //check co sach dang trong tinh trang chuan bi het han
    //->
    isDueDate : boolean
    if ( isDueDate ) -> "Qua han tra sach"
}

class Book {
  - id : String
  - title : String
  - author :String
  - isBorrowed : boolean
}

class DocumentManager {
    - groupByAuthor : ArrayList<Book>
    - groupByTitle : ArrayList<Book>
    //group theo tìm kiếm title gần giống (%)
}

class Author {
    - name : String
    - dateOfBirth : String
    - Bio : String
    getInfor() : void
}

Author----->DocumentManager
Book-----> DocumentManager

class DataBaseSQL {
     - connection : Connection
     - password : String
     - jdbcURL : String
     - username : String
     //book storage in DataBase
     bookSearch(String) : ArrayList<Book>
     authorSearch(String) : ArrayList<Author>
     getAllDocument() : ArrayList<Book>
     libraryAddBook(Book book)
     libraryRemoveBook(Book book)

     //user storage in DataBase

}

class BookDataBase extends DataBaseSQL {
    //- ins ; DataBaseMySQL
    - prepareStatement : PrepareStatement
    - resultSet : ResultSet
    //Name of table that contains books' data
    - bookTable: String
    bookSearch(String) : ArrayList<Book>
    authorSearch(String) : ArrayList<Author>
    //
    getAllDocument() : ArrayList<Book>
    libraryAddBook(Book book)
    libraryRemoveBook(Book book)
}

class UserDataBase extends DataBaseSQL {
        //- ins ; DataBaseMySQL
    - prepareStatement : PrepareStatement
    - resultSet : ResultSet
    //Name of table that contains users' data
    - userTable: String

}
class SearchBar {
    // hiện lịch sử tìm kiếm
    // gợi ý dựa trên lịch sử tìm kiem
    // groupByAuthor,groupByTitle...
    // goi y dua tren luot muon nhieu
    // goi y dua tren sach moi nhap kho
    -
    -
}

class SuggestSearch {
    // Luu lich su tim kiem
    SaveSearch() : void
    //
    BestSearch() : ArrayList<Book>
    // New Book
    NewBook() : ArrayList<Book>
    // Star Book : Give the star from 1->5

}

class GUI {}
class RegisterGUI extends GUI {}
class HomeGUI extends GUI {}
class UserGUI extends GUI {}
class ManagerGUI extends GUI {}

class UserException {
    + UserException(message :String)
}
class RegisterException extends UserException {
    // Dang nhap sai -> Message Box
    // ???

    //Nen gop vao thanh wrong password or username ko
    wrongUsername(User user): String
    wrongPassword(User user): String
}

class MakeRequestException extends UserException {
    // Khi so luong sach = 0 , khong the muon sach
    // Khi sach can tim ko co trong thu vien

    bookNotAvail(dtb: BookDataBase , booksName: String): String
    bookNotFound(dtb: BookDataBase , booksName: String): String
    authorNotFound(dtb: BookDataBase , booksName: String): String
}

class LicenseException extends UserException {
    // ReaderAccount khong the add book vao gia sach
    //  nhu Librarian
    //  ???

    permissionDeny(ReaderAccount reader): String
}


@enduml